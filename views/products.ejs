<% const content = () => { 
     const isAdmin = currentUser && currentUser.role === 'admin';
     const categoryOptions = (STANDARD_CATEGORIES || []);
%>
<div class="flex flex-col gap-6 animate-fade-in">
  <div class="space-y-2">
    <span class="inline-flex items-center gap-2 px-3 py-1 rounded-full bg-brand/10 text-brand text-xs font-semibold uppercase tracking-wider w-max">
      Rak Produk
    </span>
    <h1 class="text-3xl font-semibold text-strong">Manajemen Produk</h1>
    <p class="text-sm text-muted">Tambah, perbarui, dan atur stok barang warung dengan cepat.</p>
  </div>

  <div class="grid xl:grid-cols-2 gap-6">
    <div class="glass-card p-6 transition hover:-translate-y-0.5">
      <h2 class="text-lg font-semibold text-strong mb-4">Tambah Produk Baru</h2>
      <% if (isAdmin) { %>
        <div id="product-feedback" class="text-sm hidden mb-3"></div>
        <form id="new-product-form" class="space-y-4">
          <div class="grid sm:grid-cols-2 gap-4">
            <div class="space-y-1.5">
              <label class="block text-xs uppercase tracking-wider text-subtle">Nama</label>
              <input name="name" class="w-full glass-input px-3 py-2" required />
            </div>
            <div class="space-y-1.5">
              <label class="block text-xs uppercase tracking-wider text-subtle">SKU</label>
              <input name="sku" class="w-full glass-input px-3 py-2" />
            </div>
            <div class="space-y-1.5">
              <label class="block text-xs uppercase tracking-wider text-subtle">Harga (IDR)</label>
              <input type="number" name="price" min="0" class="w-full glass-input px-3 py-2" required />
            </div>
            <div class="space-y-1.5">
              <label class="block text-xs uppercase tracking-wider text-subtle">Kategori</label>
              <select name="category" class="w-full glass-input px-3 py-2">
                <option value="">Pilih kategori</option>
                <% categoryOptions.forEach(cat => { %>
                  <option value="<%= cat %>"><%= cat %></option>
                <% }) %>
              </select>
            </div>
            <div class="space-y-1.5">
              <label class="block text-xs uppercase tracking-wider text-subtle">Stok</label>
              <input type="number" name="stock" min="0" class="w-full glass-input px-3 py-2" />
            </div>
          </div>
          <button class="inline-flex items-center justify-center gap-2 rounded-xl px-4 py-2.5 font-semibold transition glass-button">
            Simpan Produk
          </button>
        </form>
      <% } else { %>
        <p class="text-sm text-muted">Hanya admin yang dapat menambahkan produk baru.</p>
      <% } %>
    </div>

    <div class="glass-card overflow-hidden glass-table">
      <div class="flex items-center justify-between px-6 py-4" style="border-bottom: 1px solid var(--border-soft); background: var(--surface-muted);">
        <div>
          <h2 class="text-lg font-semibold text-strong">Daftar Produk</h2>
          <p class="text-xs text-muted">Edit langsung pada kolom untuk memperbarui data.</p>
        </div>
        <span class="text-xs px-3 py-1 rounded-full font-medium badge-glass"><%= rows.length %> item</span>
      </div>
      <div class="overflow-x-auto px-4 pb-4">
        <table class="w-full text-sm glass-table">
          <thead class="uppercase text-xs tracking-wider text-muted">
            <tr>
              <th class="px-4 py-3 text-left">Nama</th>
              <th class="px-4 py-3 text-left">Harga</th>
              <th class="px-4 py-3 text-left">Stok</th>
              <th class="px-4 py-3 text-left">Kategori</th>
              <th class="px-4 py-3 text-left">Status</th>
              <th class="px-4 py-3 text-left">Aksi</th>
            </tr>
          </thead>
          <tbody>
            <% rows.forEach(r => { const hasCustomCategory = r.category && !categoryOptions.includes(r.category); %>
              <tr class="transition">
                <% if (isAdmin) { %>
                  <form method="POST" action="/products/<%= r.id %>/update">
                    <td class="px-4 py-3"><input name="name" value="<%= r.name %>" class="w-full glass-input px-2 py-1 text-sm"></td>
                    <td class="px-4 py-3"><input name="price" type="number" value="<%= r.price %>" class="w-28 glass-input px-2 py-1 text-sm"></td>
                    <td class="px-4 py-3"><input name="stock" type="number" value="<%= r.stock %>" class="w-20 glass-input px-2 py-1 text-sm"></td>
                    <td class="px-4 py-3">
                      <select name="category" class="w-full glass-input px-2 py-1 text-sm">
                        <option value="">Tanpa kategori</option>
                        <% categoryOptions.forEach(cat => { %>
                          <option value="<%= cat %>" <%= r.category === cat ? 'selected' : '' %>><%= cat %></option>
                        <% }) %>
                        <% if (hasCustomCategory) { %>
                          <option value="<%= r.category %>" selected><%= r.category %></option>
                        <% } %>
                      </select>
                    </td>
                    <td class="px-4 py-3">
                      <label class="inline-flex items-center gap-2 text-xs">
                        <input type="checkbox" name="is_active" <%= r.is_active ? 'checked' : '' %> class="h-4 w-4" />
                        Aktif
                      </label>
                    </td>
                    <td class="px-4 py-3">
                      <div class="flex items-center gap-2">
                        <input type="hidden" name="sku" value="<%= r.sku || '' %>">
                        <button class="px-3 py-1 rounded-lg font-medium transition glass-button">Update</button>
                  </form>
                        <button type="button" class="px-3 py-1 rounded-lg font-medium transition glass-button alt" data-delete-product="<%= r.id %>">Hapus</button>
                      </div>
                    </td>
                <% } else { %>
                    <td class="px-4 py-3"><%= r.name %></td>
                    <td class="px-4 py-3"><%= rupiah(r.price) %></td>
                    <td class="px-4 py-3"><%= r.stock %></td>
                    <td class="px-4 py-3"><%= r.category || '-' %></td>
                    <td class="px-4 py-3"><span class="badge-glass <%= r.is_active ? 'positive' : 'warning' %>"><%= r.is_active ? 'Aktif' : 'Nonaktif' %></span></td>
                    <td class="px-4 py-3 text-subtle text-xs">Khusus admin</td>
                <% } %>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
<% if (isAdmin) { %>
<script>
(function () {
  const form = document.getElementById('new-product-form');
  const feedback = document.getElementById('product-feedback');

  function showFeedback(message, positive) {
    if (!feedback) return;
    feedback.textContent = message || '';
    feedback.classList.remove('hidden');
    feedback.style.color = positive ? 'var(--status-success)' : 'var(--status-danger)';
  }

  if (form) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      const data = Object.fromEntries(new FormData(form).entries());
      try {
        const res = await fetch('/api/products', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });
        const payload = await res.json();
        if (!res.ok) throw new Error(payload.error || 'Gagal menambah produk');
        showFeedback('Produk berhasil ditambahkan.', true);
        setTimeout(() => window.location.reload(), 600);
      } catch (err) {
        showFeedback(err.message || 'Terjadi kesalahan saat menambah produk.', false);
      }
    });
  }

  document.querySelectorAll('[data-delete-product]').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const id = btn.getAttribute('data-delete-product');
      if (!id) return;
      if (!confirm('Hapus produk ini?')) return;
      try {
        const res = await fetch(`/api/products/${id}`, { method: 'DELETE' });
        const payload = await res.json();
        if (!res.ok) throw new Error(payload.error || 'Gagal menghapus produk');
        window.location.reload();
      } catch (err) {
        showFeedback(err.message || 'Terjadi kesalahan saat menghapus produk.', false);
      }
    });
  });
})();
</script>
<% } %>
<% } %>
<%- include('wrapper', { title: 'Produk', content }) %>
